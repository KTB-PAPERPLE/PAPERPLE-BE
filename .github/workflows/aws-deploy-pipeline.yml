name: Build and Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 및 서브모듈 체크아웃
      - name: Check out code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive  # 모든 서브모듈 포함하여 가져오기
          fetch-depth: 0         # 전체 히스토리 가져오기
          token: ${{ secrets.GH_TOKEN }}

      # 2. Java 설정
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean bootJar

      # 4. 빌드 테스트 (선택)
      - name: Run Tests
        run: ./gradlew test

      # 5. 아티팩트 업로드
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: build/libs/PAPERPLE-BE-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1. 아티팩트 다운로드
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar

      # 2. EC2 서버에 업로드 및 실행
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          JAR_PATH: PAPERPLE-BE-0.0.1-SNAPSHOT.jar
          DEPLOY_PATH: /home/${{ secrets.EC2_USER }}/PAPERPLE-BE

        run: |
          # SSH 키 설정
          echo "$SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          
          # EC2에 JAR 파일 업로드 및 실행
          scp -i ssh_key.pem -o StrictHostKeyChecking=no $JAR_PATH $EC2_USER@$EC2_HOST:$DEPLOY_PATH/app.jar
          ssh -i ssh_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # 실행 중인 애플리케이션 종료
            pkill -f app.jar || true
          
            # 로그 경로를 DEPLOY_PATH로 변경
            nohup java -jar $DEPLOY_PATH/app.jar > $DEPLOY_PATH/app.log 2>&1 &
          EOF
          
          # SSH 키 삭제
          rm ssh_key.pem
