name: Build and Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  # 1. 빌드 작업
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 및 서브모듈 체크아웃
      - name: Check out code with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive  # 모든 서브모듈 포함하여 가져오기
          fetch-depth: 0         # 전체 히스토리 가져오기
          token: ${{ secrets.GH_TOKEN }}

      # 1.2 JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 1.3 Gradle Wrapper 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 1.4 Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean bootJar

      # 1.5 빌드된 JAR 파일 업로드
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: PAPERPLE-BE
          path: build/libs/PAPERPLE-BE-0.0.1-SNAPSHOT.jar

  # 2. 배포 작업
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 2.1 빌드된 JAR 파일 다운로드
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: PAPERPLE-BE

      # 2.2 EC2 서버로 배포 및 실행
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}

        run: |
          # SSH 키 생성 및 권한 설정
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # JAR 파일 EC2에 업로드
          scp -i private_key.pem -o StrictHostKeyChecking=no PAPERPLE-BE-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/$EC2_USER/PAPERPLE-BE/app.jar
          
          # EC2에서 JAR 실행
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # 기존 Java 프로세스 종료
            if pgrep java; then
              echo "Stopping running Java application..."
              pgrep java | xargs kill -9
            else
              echo "No running Java application found."
            fi
          
            # 새 애플리케이션 실행
            echo "Starting new Java application..."
            nohup java -jar /home/$EC2_USER/PAPERPLE-BE/app.jar > /home/$EC2_USER/PAPERPLE-BE/app.log 2>&1 &
          EOF
          
          # SSH 키 삭제
          rm -f private_key.pem
