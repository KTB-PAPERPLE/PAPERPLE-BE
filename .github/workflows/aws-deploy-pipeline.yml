name: Aws Deploy Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 및 서브모듈 체크아웃
      - name: Check out code with submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive  # 모든 서브모듈 포함하여 가져오기
          fetch-depth: 0         # 전체 히스토리 가져오기
          token: ${{ secrets.GH_TOKEN }}

      # 2. Java 설정
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. 프로젝트 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      # 4. 빌드 후 JAR 파일 존재 여부 확인
      - name: Verify JAR file exists
        run: ls build/libs/

      # 5. EC2 서버로 배포
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}

        run: |
          # SSH 키 설정
          echo "$SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          
          # EC2 서버에 JAR 파일 업로드 (GitHub Actions 빌드 디렉토리에서 파일 전송)
          scp -i ssh_key.pem -o StrictHostKeyChecking=no build/libs/PAPERPLE-BE-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/$EC2_USER/app.jar
          
          # EC2 서버에 SSH로 접속하여 애플리케이션 재시작
          ssh -i ssh_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # 기존 프로세스 종료 및 새로 실행
            pkill -f 'java -jar' || true
            nohup java -jar /home/$EC2_USER/app.jar > /home/$EC2_USER/app.log 2>&1 &
          EOF
          
          # SSH 키 삭제
          rm ssh_key.pem
